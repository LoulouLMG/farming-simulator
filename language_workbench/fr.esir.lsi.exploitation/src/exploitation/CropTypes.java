/**
 */
package exploitation;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Crop Types</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see exploitation.ExploitationPackage#getCropTypes()
 * @model
 * @generated
 */
public enum CropTypes implements Enumerator {
	/**
	 * The '<em><b>CORN</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #CORN_VALUE
	 * @generated
	 * @ordered
	 */
	CORN(0, "CORN", "CORN"),

	/**
	 * The '<em><b>SORGHUM</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #SORGHUM_VALUE
	 * @generated
	 * @ordered
	 */
	SORGHUM(1, "SORGHUM", "SORGHUM"),

	/**
	 * The '<em><b>WHEAT</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #WHEAT_VALUE
	 * @generated
	 * @ordered
	 */
	WHEAT(2, "WHEAT", "WHEAT");

	/**
	 * The '<em><b>CORN</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>CORN</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @see #CORN
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int CORN_VALUE = 0;

	/**
	 * The '<em><b>SORGHUM</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>SORGHUM</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @see #SORGHUM
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int SORGHUM_VALUE = 1;

	/**
	 * The '<em><b>WHEAT</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>WHEAT</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @see #WHEAT
	 * @model
	 * @generated
	 * @ordered
	 */
	public static final int WHEAT_VALUE = 2;

	/**
	 * An array of all the '<em><b>Crop Types</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static final CropTypes[] VALUES_ARRAY =
		new CropTypes[] {
			CORN,
			SORGHUM,
			WHEAT,
		};

	/**
	 * A public read-only list of all the '<em><b>Crop Types</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final List<CropTypes> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

	/**
	 * Returns the '<em><b>Crop Types</b></em>' literal with the specified literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static CropTypes get(String literal) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			CropTypes result = VALUES_ARRAY[i];
			if (result.toString().equals(literal)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Crop Types</b></em>' literal with the specified name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static CropTypes getByName(String name) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			CropTypes result = VALUES_ARRAY[i];
			if (result.getName().equals(name)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Crop Types</b></em>' literal with the specified integer value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static CropTypes get(int value) {
		switch (value) {
			case CORN_VALUE: return CORN;
			case SORGHUM_VALUE: return SORGHUM;
			case WHEAT_VALUE: return WHEAT;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private final int value;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private final String name;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private final String literal;

	/**
	 * Only this class can construct instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private CropTypes(int value, String name, String literal) {
		this.value = value;
		this.name = name;
		this.literal = literal;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public int getValue() {
	  return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getName() {
	  return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getLiteral() {
	  return literal;
	}

	/**
	 * Returns the literal value of the enumerator, which is its string representation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		return literal;
	}
	
} //CropTypes
