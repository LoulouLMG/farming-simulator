/**
 */
package activity.impl;

import activity.ActivityPackage;
import activity.Date;
import activity.Periodic;
import activity.PeriodicActivity;
import activity.ResourceAllocation;
import activity.Rule;
import java.util.Collection;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Periodic Activity</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link activity.impl.PeriodicActivityImpl#getPeriodicity <em>Periodicity</em>}</li>
 *   <li>{@link activity.impl.PeriodicActivityImpl#getName <em>Name</em>}</li>
 *   <li>{@link activity.impl.PeriodicActivityImpl#getRules <em>Rules</em>}</li>
 *   <li>{@link activity.impl.PeriodicActivityImpl#getAllocations <em>Allocations</em>}</li>
 *   <li>{@link activity.impl.PeriodicActivityImpl#getStart <em>Start</em>}</li>
 *   <li>{@link activity.impl.PeriodicActivityImpl#getEnd <em>End</em>}</li>
 *   <li>{@link activity.impl.PeriodicActivityImpl#getPeriodicityLitteral <em>Periodicity Litteral</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class PeriodicActivityImpl extends MinimalEObjectImpl.Container implements PeriodicActivity {
	/**
	 * The default value of the '{@link #getPeriodicity() <em>Periodicity</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPeriodicity()
	 * @generated
	 * @ordered
	 */
	protected static final int PERIODICITY_EDEFAULT = 0;

	/**
	 * The cached value of the '{@link #getPeriodicity() <em>Periodicity</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPeriodicity()
	 * @generated
	 * @ordered
	 */
	protected int periodicity = PERIODICITY_EDEFAULT;

	/**
	 * The default value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected static final String NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected String name = NAME_EDEFAULT;

	/**
	 * The cached value of the '{@link #getRules() <em>Rules</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRules()
	 * @generated
	 * @ordered
	 */
	protected EList<Rule> rules;

	/**
	 * The cached value of the '{@link #getAllocations() <em>Allocations</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getAllocations()
	 * @generated
	 * @ordered
	 */
	protected EList<ResourceAllocation> allocations;

	/**
	 * The cached value of the '{@link #getStart() <em>Start</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getStart()
	 * @generated
	 * @ordered
	 */
	protected Date start;

	/**
	 * The cached value of the '{@link #getEnd() <em>End</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getEnd()
	 * @generated
	 * @ordered
	 */
	protected Date end;

	/**
	 * The default value of the '{@link #getPeriodicityLitteral() <em>Periodicity Litteral</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPeriodicityLitteral()
	 * @generated
	 * @ordered
	 */
	protected static final Periodic PERIODICITY_LITTERAL_EDEFAULT = Periodic.DAY;

	/**
	 * The cached value of the '{@link #getPeriodicityLitteral() <em>Periodicity Litteral</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getPeriodicityLitteral()
	 * @generated
	 * @ordered
	 */
	protected Periodic periodicityLitteral = PERIODICITY_LITTERAL_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PeriodicActivityImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return ActivityPackage.Literals.PERIODIC_ACTIVITY;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public int getPeriodicity() {
		return periodicity;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setPeriodicity(int newPeriodicity) {
		int oldPeriodicity = periodicity;
		periodicity = newPeriodicity;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ActivityPackage.PERIODIC_ACTIVITY__PERIODICITY, oldPeriodicity, periodicity));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Date getStart() {
		return start;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetStart(Date newStart, NotificationChain msgs) {
		Date oldStart = start;
		start = newStart;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ActivityPackage.PERIODIC_ACTIVITY__START, oldStart, newStart);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setStart(Date newStart) {
		if (newStart != start) {
			NotificationChain msgs = null;
			if (start != null)
				msgs = ((InternalEObject)start).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ActivityPackage.PERIODIC_ACTIVITY__START, null, msgs);
			if (newStart != null)
				msgs = ((InternalEObject)newStart).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ActivityPackage.PERIODIC_ACTIVITY__START, null, msgs);
			msgs = basicSetStart(newStart, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ActivityPackage.PERIODIC_ACTIVITY__START, newStart, newStart));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Date getEnd() {
		return end;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetEnd(Date newEnd, NotificationChain msgs) {
		Date oldEnd = end;
		end = newEnd;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ActivityPackage.PERIODIC_ACTIVITY__END, oldEnd, newEnd);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setEnd(Date newEnd) {
		if (newEnd != end) {
			NotificationChain msgs = null;
			if (end != null)
				msgs = ((InternalEObject)end).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ActivityPackage.PERIODIC_ACTIVITY__END, null, msgs);
			if (newEnd != null)
				msgs = ((InternalEObject)newEnd).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ActivityPackage.PERIODIC_ACTIVITY__END, null, msgs);
			msgs = basicSetEnd(newEnd, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ActivityPackage.PERIODIC_ACTIVITY__END, newEnd, newEnd));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Periodic getPeriodicityLitteral() {
		return periodicityLitteral;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setPeriodicityLitteral(Periodic newPeriodicityLitteral) {
		Periodic oldPeriodicityLitteral = periodicityLitteral;
		periodicityLitteral = newPeriodicityLitteral == null ? PERIODICITY_LITTERAL_EDEFAULT : newPeriodicityLitteral;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ActivityPackage.PERIODIC_ACTIVITY__PERIODICITY_LITTERAL, oldPeriodicityLitteral, periodicityLitteral));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getName() {
		return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setName(String newName) {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, ActivityPackage.PERIODIC_ACTIVITY__NAME, oldName, name));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Rule> getRules() {
		if (rules == null) {
			rules = new EObjectContainmentEList<Rule>(Rule.class, this, ActivityPackage.PERIODIC_ACTIVITY__RULES);
		}
		return rules;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<ResourceAllocation> getAllocations() {
		if (allocations == null) {
			allocations = new EObjectContainmentEList<ResourceAllocation>(ResourceAllocation.class, this, ActivityPackage.PERIODIC_ACTIVITY__ALLOCATIONS);
		}
		return allocations;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case ActivityPackage.PERIODIC_ACTIVITY__RULES:
				return ((InternalEList<?>)getRules()).basicRemove(otherEnd, msgs);
			case ActivityPackage.PERIODIC_ACTIVITY__ALLOCATIONS:
				return ((InternalEList<?>)getAllocations()).basicRemove(otherEnd, msgs);
			case ActivityPackage.PERIODIC_ACTIVITY__START:
				return basicSetStart(null, msgs);
			case ActivityPackage.PERIODIC_ACTIVITY__END:
				return basicSetEnd(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case ActivityPackage.PERIODIC_ACTIVITY__PERIODICITY:
				return getPeriodicity();
			case ActivityPackage.PERIODIC_ACTIVITY__NAME:
				return getName();
			case ActivityPackage.PERIODIC_ACTIVITY__RULES:
				return getRules();
			case ActivityPackage.PERIODIC_ACTIVITY__ALLOCATIONS:
				return getAllocations();
			case ActivityPackage.PERIODIC_ACTIVITY__START:
				return getStart();
			case ActivityPackage.PERIODIC_ACTIVITY__END:
				return getEnd();
			case ActivityPackage.PERIODIC_ACTIVITY__PERIODICITY_LITTERAL:
				return getPeriodicityLitteral();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case ActivityPackage.PERIODIC_ACTIVITY__PERIODICITY:
				setPeriodicity((Integer)newValue);
				return;
			case ActivityPackage.PERIODIC_ACTIVITY__NAME:
				setName((String)newValue);
				return;
			case ActivityPackage.PERIODIC_ACTIVITY__RULES:
				getRules().clear();
				getRules().addAll((Collection<? extends Rule>)newValue);
				return;
			case ActivityPackage.PERIODIC_ACTIVITY__ALLOCATIONS:
				getAllocations().clear();
				getAllocations().addAll((Collection<? extends ResourceAllocation>)newValue);
				return;
			case ActivityPackage.PERIODIC_ACTIVITY__START:
				setStart((Date)newValue);
				return;
			case ActivityPackage.PERIODIC_ACTIVITY__END:
				setEnd((Date)newValue);
				return;
			case ActivityPackage.PERIODIC_ACTIVITY__PERIODICITY_LITTERAL:
				setPeriodicityLitteral((Periodic)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case ActivityPackage.PERIODIC_ACTIVITY__PERIODICITY:
				setPeriodicity(PERIODICITY_EDEFAULT);
				return;
			case ActivityPackage.PERIODIC_ACTIVITY__NAME:
				setName(NAME_EDEFAULT);
				return;
			case ActivityPackage.PERIODIC_ACTIVITY__RULES:
				getRules().clear();
				return;
			case ActivityPackage.PERIODIC_ACTIVITY__ALLOCATIONS:
				getAllocations().clear();
				return;
			case ActivityPackage.PERIODIC_ACTIVITY__START:
				setStart((Date)null);
				return;
			case ActivityPackage.PERIODIC_ACTIVITY__END:
				setEnd((Date)null);
				return;
			case ActivityPackage.PERIODIC_ACTIVITY__PERIODICITY_LITTERAL:
				setPeriodicityLitteral(PERIODICITY_LITTERAL_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case ActivityPackage.PERIODIC_ACTIVITY__PERIODICITY:
				return periodicity != PERIODICITY_EDEFAULT;
			case ActivityPackage.PERIODIC_ACTIVITY__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case ActivityPackage.PERIODIC_ACTIVITY__RULES:
				return rules != null && !rules.isEmpty();
			case ActivityPackage.PERIODIC_ACTIVITY__ALLOCATIONS:
				return allocations != null && !allocations.isEmpty();
			case ActivityPackage.PERIODIC_ACTIVITY__START:
				return start != null;
			case ActivityPackage.PERIODIC_ACTIVITY__END:
				return end != null;
			case ActivityPackage.PERIODIC_ACTIVITY__PERIODICITY_LITTERAL:
				return periodicityLitteral != PERIODICITY_LITTERAL_EDEFAULT;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (periodicity: ");
		result.append(periodicity);
		result.append(", name: ");
		result.append(name);
		result.append(", periodicityLitteral: ");
		result.append(periodicityLitteral);
		result.append(')');
		return result.toString();
	}

} //PeriodicActivityImpl
