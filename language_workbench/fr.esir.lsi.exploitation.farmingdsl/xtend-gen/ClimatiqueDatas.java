import com.google.common.io.CharStreams;
import java.io.FileReader;
import java.util.Iterator;
import java.util.List;
import org.eclipse.xtext.xbase.lib.Conversions;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.Functions.Function0;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.ListExtensions;

@SuppressWarnings("all")
public class ClimatiqueDatas {
  private final List<ClimatiqueData> climatiqueDatas = new Function0<List<ClimatiqueData>>() {
    public List<ClimatiqueData> apply() {
      try {
        FileReader _fileReader = new FileReader("data.csv");
        List<String> _readLines = CharStreams.readLines(_fileReader);
        final Function1<String, ClimatiqueData> _function = new Function1<String, ClimatiqueData>() {
          public ClimatiqueData apply(final String line) {
            String[] _split = line.split(";");
            final Iterator<String> segments = ((List<String>)Conversions.doWrapArray(_split)).iterator();
            String _next = segments.next();
            double _parseDouble = Double.parseDouble(_next);
            String _next_1 = segments.next();
            int _parseInt = Integer.parseInt(_next_1);
            String _next_2 = segments.next();
            int _parseInt_1 = Integer.parseInt(_next_2);
            String _next_3 = segments.next();
            int _parseInt_2 = Integer.parseInt(_next_3);
            String _next_4 = segments.next();
            float _parseFloat = Float.parseFloat(_next_4);
            String _next_5 = segments.next();
            float _parseFloat_1 = Float.parseFloat(_next_5);
            String _next_6 = segments.next();
            float _parseFloat_2 = Float.parseFloat(_next_6);
            String _next_7 = segments.next();
            float _parseFloat_3 = Float.parseFloat(_next_7);
            return new ClimatiqueData(_parseDouble, _parseInt, _parseInt_1, _parseInt_2, _parseFloat, _parseFloat_1, _parseFloat_2, _parseFloat_3);
          }
        };
        List<ClimatiqueData> _map = ListExtensions.<String, ClimatiqueData>map(_readLines, _function);
        return _map;
      } catch (Throwable _e) {
        throw Exceptions.sneakyThrow(_e);
      }
    }
  }.apply();
}
