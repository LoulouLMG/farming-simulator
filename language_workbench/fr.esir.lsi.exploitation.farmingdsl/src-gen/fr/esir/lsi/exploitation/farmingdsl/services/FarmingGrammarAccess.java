/*
* generated by Xtext
*/
package fr.esir.lsi.exploitation.farmingdsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class FarmingGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRessourceTypesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cRessourceTypesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cRessourceTypesResourceTypeParserRuleCall_3_2_0 = (RuleCall)cRessourceTypesAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cRessourceTypesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cRessourceTypesResourceTypeParserRuleCall_3_3_1_0 = (RuleCall)cRessourceTypesAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cActivitiesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cActivitiesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cActivitiesPeriodicActivityParserRuleCall_4_2_0 = (RuleCall)cActivitiesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cActivitiesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cActivitiesPeriodicActivityParserRuleCall_4_3_1_0 = (RuleCall)cActivitiesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Model returns activity::Model:
		//	{activity::Model} "Model" "{" ("ressourceTypes" "{" ressourceTypes+=ResourceType ("," ressourceTypes+=ResourceType)*
		//	"}")? ("activities" "{" activities+=PeriodicActivity ("," activities+=PeriodicActivity)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{activity::Model} "Model" "{" ("ressourceTypes" "{" ressourceTypes+=ResourceType ("," ressourceTypes+=ResourceType)*
		//"}")? ("activities" "{" activities+=PeriodicActivity ("," activities+=PeriodicActivity)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{activity::Model}
		public Action getModelAction_0() { return cModelAction_0; }

		//"Model"
		public Keyword getModelKeyword_1() { return cModelKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("ressourceTypes" "{" ressourceTypes+=ResourceType ("," ressourceTypes+=ResourceType)* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"ressourceTypes"
		public Keyword getRessourceTypesKeyword_3_0() { return cRessourceTypesKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//ressourceTypes+=ResourceType
		public Assignment getRessourceTypesAssignment_3_2() { return cRessourceTypesAssignment_3_2; }

		//ResourceType
		public RuleCall getRessourceTypesResourceTypeParserRuleCall_3_2_0() { return cRessourceTypesResourceTypeParserRuleCall_3_2_0; }

		//("," ressourceTypes+=ResourceType)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//ressourceTypes+=ResourceType
		public Assignment getRessourceTypesAssignment_3_3_1() { return cRessourceTypesAssignment_3_3_1; }

		//ResourceType
		public RuleCall getRessourceTypesResourceTypeParserRuleCall_3_3_1_0() { return cRessourceTypesResourceTypeParserRuleCall_3_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }

		//("activities" "{" activities+=PeriodicActivity ("," activities+=PeriodicActivity)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"activities"
		public Keyword getActivitiesKeyword_4_0() { return cActivitiesKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//activities+=PeriodicActivity
		public Assignment getActivitiesAssignment_4_2() { return cActivitiesAssignment_4_2; }

		//PeriodicActivity
		public RuleCall getActivitiesPeriodicActivityParserRuleCall_4_2_0() { return cActivitiesPeriodicActivityParserRuleCall_4_2_0; }

		//("," activities+=PeriodicActivity)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//activities+=PeriodicActivity
		public Assignment getActivitiesAssignment_4_3_1() { return cActivitiesAssignment_4_3_1; }

		//PeriodicActivity
		public RuleCall getActivitiesPeriodicActivityParserRuleCall_4_3_1_0() { return cActivitiesPeriodicActivityParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ResourceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ResourceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cResourceTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ResourceType returns activity::ResourceType:
		//	{activity::ResourceType} name=EString;
		public ParserRule getRule() { return rule; }

		//{activity::ResourceType} name=EString
		public Group getGroup() { return cGroup; }

		//{activity::ResourceType}
		public Action getResourceTypeAction_0() { return cResourceTypeAction_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}

	public class PeriodicActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PeriodicActivity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPeriodicActivityAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPeriodicActivityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPeriodicityKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPeriodicityAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPeriodicityEIntParserRuleCall_4_1_0 = (RuleCall)cPeriodicityAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cStartKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cStartAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cStartEDateParserRuleCall_5_1_0 = (RuleCall)cStartAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cEndKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cEndAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cEndEDateParserRuleCall_6_1_0 = (RuleCall)cEndAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cRulesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cRulesAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cRulesRuleParserRuleCall_7_2_0 = (RuleCall)cRulesAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cRulesAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cRulesRuleParserRuleCall_7_3_1_0 = (RuleCall)cRulesAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cAllocationsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cAllocationsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cAllocationsResourceAllocationParserRuleCall_8_2_0 = (RuleCall)cAllocationsAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cAllocationsAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cAllocationsResourceAllocationParserRuleCall_8_3_1_0 = (RuleCall)cAllocationsAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//PeriodicActivity returns activity::PeriodicActivity:
		//	{activity::PeriodicActivity} "PeriodicActivity" name=EString "{" ("periodicity" periodicity=EInt)? ("start"
		//	start=EDate)? ("end" end=EDate)? ("rules" "{" rules+=Rule ("," rules+=Rule)* "}")? ("allocations" "{"
		//	allocations+=ResourceAllocation ("," allocations+=ResourceAllocation)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{activity::PeriodicActivity} "PeriodicActivity" name=EString "{" ("periodicity" periodicity=EInt)? ("start"
		//start=EDate)? ("end" end=EDate)? ("rules" "{" rules+=Rule ("," rules+=Rule)* "}")? ("allocations" "{"
		//allocations+=ResourceAllocation ("," allocations+=ResourceAllocation)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{activity::PeriodicActivity}
		public Action getPeriodicActivityAction_0() { return cPeriodicActivityAction_0; }

		//"PeriodicActivity"
		public Keyword getPeriodicActivityKeyword_1() { return cPeriodicActivityKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("periodicity" periodicity=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"periodicity"
		public Keyword getPeriodicityKeyword_4_0() { return cPeriodicityKeyword_4_0; }

		//periodicity=EInt
		public Assignment getPeriodicityAssignment_4_1() { return cPeriodicityAssignment_4_1; }

		//EInt
		public RuleCall getPeriodicityEIntParserRuleCall_4_1_0() { return cPeriodicityEIntParserRuleCall_4_1_0; }

		//("start" start=EDate)?
		public Group getGroup_5() { return cGroup_5; }

		//"start"
		public Keyword getStartKeyword_5_0() { return cStartKeyword_5_0; }

		//start=EDate
		public Assignment getStartAssignment_5_1() { return cStartAssignment_5_1; }

		//EDate
		public RuleCall getStartEDateParserRuleCall_5_1_0() { return cStartEDateParserRuleCall_5_1_0; }

		//("end" end=EDate)?
		public Group getGroup_6() { return cGroup_6; }

		//"end"
		public Keyword getEndKeyword_6_0() { return cEndKeyword_6_0; }

		//end=EDate
		public Assignment getEndAssignment_6_1() { return cEndAssignment_6_1; }

		//EDate
		public RuleCall getEndEDateParserRuleCall_6_1_0() { return cEndEDateParserRuleCall_6_1_0; }

		//("rules" "{" rules+=Rule ("," rules+=Rule)* "}")?
		public Group getGroup_7() { return cGroup_7; }

		//"rules"
		public Keyword getRulesKeyword_7_0() { return cRulesKeyword_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//rules+=Rule
		public Assignment getRulesAssignment_7_2() { return cRulesAssignment_7_2; }

		//Rule
		public RuleCall getRulesRuleParserRuleCall_7_2_0() { return cRulesRuleParserRuleCall_7_2_0; }

		//("," rules+=Rule)*
		public Group getGroup_7_3() { return cGroup_7_3; }

		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }

		//rules+=Rule
		public Assignment getRulesAssignment_7_3_1() { return cRulesAssignment_7_3_1; }

		//Rule
		public RuleCall getRulesRuleParserRuleCall_7_3_1_0() { return cRulesRuleParserRuleCall_7_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }

		//("allocations" "{" allocations+=ResourceAllocation ("," allocations+=ResourceAllocation)* "}")?
		public Group getGroup_8() { return cGroup_8; }

		//"allocations"
		public Keyword getAllocationsKeyword_8_0() { return cAllocationsKeyword_8_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }

		//allocations+=ResourceAllocation
		public Assignment getAllocationsAssignment_8_2() { return cAllocationsAssignment_8_2; }

		//ResourceAllocation
		public RuleCall getAllocationsResourceAllocationParserRuleCall_8_2_0() { return cAllocationsResourceAllocationParserRuleCall_8_2_0; }

		//("," allocations+=ResourceAllocation)*
		public Group getGroup_8_3() { return cGroup_8_3; }

		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }

		//allocations+=ResourceAllocation
		public Assignment getAllocationsAssignment_8_3_1() { return cAllocationsAssignment_8_3_1; }

		//ResourceAllocation
		public RuleCall getAllocationsResourceAllocationParserRuleCall_8_3_1_0() { return cAllocationsResourceAllocationParserRuleCall_8_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//	"-"? INT;
		public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class EDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EDate");
		private final Keyword cEDateKeyword = (Keyword)rule.eContents().get(1);
		
		/// * TODO: implement this rule and an appropriate IValueConverter * / EDate returns ecore::EDate:
		//	"EDate";
		public ParserRule getRule() { return rule; }

		//"EDate"
		public Keyword getEDateKeyword() { return cEDateKeyword; }
	}

	public class RuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Rule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRuleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPredicatesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cPredicatesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cPredicatesPredicateParserRuleCall_3_2_0 = (RuleCall)cPredicatesAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cPredicatesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cPredicatesPredicateParserRuleCall_3_3_1_0 = (RuleCall)cPredicatesAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Rule returns activity::Rule:
		//	{activity::Rule} "Rule" "{" ("predicates" "{" predicates+=Predicate ("," predicates+=Predicate)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{activity::Rule} "Rule" "{" ("predicates" "{" predicates+=Predicate ("," predicates+=Predicate)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{activity::Rule}
		public Action getRuleAction_0() { return cRuleAction_0; }

		//"Rule"
		public Keyword getRuleKeyword_1() { return cRuleKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("predicates" "{" predicates+=Predicate ("," predicates+=Predicate)* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"predicates"
		public Keyword getPredicatesKeyword_3_0() { return cPredicatesKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//predicates+=Predicate
		public Assignment getPredicatesAssignment_3_2() { return cPredicatesAssignment_3_2; }

		//Predicate
		public RuleCall getPredicatesPredicateParserRuleCall_3_2_0() { return cPredicatesPredicateParserRuleCall_3_2_0; }

		//("," predicates+=Predicate)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//predicates+=Predicate
		public Assignment getPredicatesAssignment_3_3_1() { return cPredicatesAssignment_3_3_1; }

		//Predicate
		public RuleCall getPredicatesPredicateParserRuleCall_3_3_1_0() { return cPredicatesPredicateParserRuleCall_3_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ResourceAllocationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ResourceAllocation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResourceAllocationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDurationKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDurationAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDurationEIntParserRuleCall_2_1_0 = (RuleCall)cDurationAssignment_2_1.eContents().get(0);
		private final Keyword cResourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cResourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cResourceResourceTypeCrossReference_4_0 = (CrossReference)cResourceAssignment_4.eContents().get(0);
		private final RuleCall cResourceResourceTypeEStringParserRuleCall_4_0_1 = (RuleCall)cResourceResourceTypeCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ResourceAllocation returns activity::ResourceAllocation:
		//	"ResourceAllocation" "{" ("duration" duration=EInt)? "resource" resource=[activity::ResourceType|EString] "}";
		public ParserRule getRule() { return rule; }

		//"ResourceAllocation" "{" ("duration" duration=EInt)? "resource" resource=[activity::ResourceType|EString] "}"
		public Group getGroup() { return cGroup; }

		//"ResourceAllocation"
		public Keyword getResourceAllocationKeyword_0() { return cResourceAllocationKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("duration" duration=EInt)?
		public Group getGroup_2() { return cGroup_2; }

		//"duration"
		public Keyword getDurationKeyword_2_0() { return cDurationKeyword_2_0; }

		//duration=EInt
		public Assignment getDurationAssignment_2_1() { return cDurationAssignment_2_1; }

		//EInt
		public RuleCall getDurationEIntParserRuleCall_2_1_0() { return cDurationEIntParserRuleCall_2_1_0; }

		//"resource"
		public Keyword getResourceKeyword_3() { return cResourceKeyword_3; }

		//resource=[activity::ResourceType|EString]
		public Assignment getResourceAssignment_4() { return cResourceAssignment_4; }

		//[activity::ResourceType|EString]
		public CrossReference getResourceResourceTypeCrossReference_4_0() { return cResourceResourceTypeCrossReference_4_0; }

		//EString
		public RuleCall getResourceResourceTypeEStringParserRuleCall_4_0_1() { return cResourceResourceTypeEStringParserRuleCall_4_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class PredicateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Predicate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPredicateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPredicateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Predicate returns activity::Predicate:
		//	{activity::Predicate} "Predicate";
		public ParserRule getRule() { return rule; }

		//{activity::Predicate} "Predicate"
		public Group getGroup() { return cGroup; }

		//{activity::Predicate}
		public Action getPredicateAction_0() { return cPredicateAction_0; }

		//"Predicate"
		public Keyword getPredicateKeyword_1() { return cPredicateKeyword_1; }
	}
	
	
	private ModelElements pModel;
	private ResourceTypeElements pResourceType;
	private PeriodicActivityElements pPeriodicActivity;
	private EStringElements pEString;
	private EIntElements pEInt;
	private EDateElements pEDate;
	private RuleElements pRule;
	private ResourceAllocationElements pResourceAllocation;
	private PredicateElements pPredicate;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public FarmingGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.esir.lsi.exploitation.farmingdsl.Farming".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model returns activity::Model:
	//	{activity::Model} "Model" "{" ("ressourceTypes" "{" ressourceTypes+=ResourceType ("," ressourceTypes+=ResourceType)*
	//	"}")? ("activities" "{" activities+=PeriodicActivity ("," activities+=PeriodicActivity)* "}")? "}";
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//ResourceType returns activity::ResourceType:
	//	{activity::ResourceType} name=EString;
	public ResourceTypeElements getResourceTypeAccess() {
		return (pResourceType != null) ? pResourceType : (pResourceType = new ResourceTypeElements());
	}
	
	public ParserRule getResourceTypeRule() {
		return getResourceTypeAccess().getRule();
	}

	//PeriodicActivity returns activity::PeriodicActivity:
	//	{activity::PeriodicActivity} "PeriodicActivity" name=EString "{" ("periodicity" periodicity=EInt)? ("start"
	//	start=EDate)? ("end" end=EDate)? ("rules" "{" rules+=Rule ("," rules+=Rule)* "}")? ("allocations" "{"
	//	allocations+=ResourceAllocation ("," allocations+=ResourceAllocation)* "}")? "}";
	public PeriodicActivityElements getPeriodicActivityAccess() {
		return (pPeriodicActivity != null) ? pPeriodicActivity : (pPeriodicActivity = new PeriodicActivityElements());
	}
	
	public ParserRule getPeriodicActivityRule() {
		return getPeriodicActivityAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//EInt returns ecore::EInt:
	//	"-"? INT;
	public EIntElements getEIntAccess() {
		return (pEInt != null) ? pEInt : (pEInt = new EIntElements());
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}

	/// * TODO: implement this rule and an appropriate IValueConverter * / EDate returns ecore::EDate:
	//	"EDate";
	public EDateElements getEDateAccess() {
		return (pEDate != null) ? pEDate : (pEDate = new EDateElements());
	}
	
	public ParserRule getEDateRule() {
		return getEDateAccess().getRule();
	}

	//Rule returns activity::Rule:
	//	{activity::Rule} "Rule" "{" ("predicates" "{" predicates+=Predicate ("," predicates+=Predicate)* "}")? "}";
	public RuleElements getRuleAccess() {
		return (pRule != null) ? pRule : (pRule = new RuleElements());
	}
	
	public ParserRule getRuleRule() {
		return getRuleAccess().getRule();
	}

	//ResourceAllocation returns activity::ResourceAllocation:
	//	"ResourceAllocation" "{" ("duration" duration=EInt)? "resource" resource=[activity::ResourceType|EString] "}";
	public ResourceAllocationElements getResourceAllocationAccess() {
		return (pResourceAllocation != null) ? pResourceAllocation : (pResourceAllocation = new ResourceAllocationElements());
	}
	
	public ParserRule getResourceAllocationRule() {
		return getResourceAllocationAccess().getRule();
	}

	//Predicate returns activity::Predicate:
	//	{activity::Predicate} "Predicate";
	public PredicateElements getPredicateAccess() {
		return (pPredicate != null) ? pPredicate : (pPredicate = new PredicateElements());
	}
	
	public ParserRule getPredicateRule() {
		return getPredicateAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
