/*
* generated by Xtext
*/
grammar InternalFarming;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package fr.esir.lsi.exploitation.farmingdsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.esir.lsi.exploitation.farmingdsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.esir.lsi.exploitation.farmingdsl.services.FarmingGrammarAccess;

}

@parser::members {

 	private FarmingGrammarAccess grammarAccess;
 	
    public InternalFarmingParser(TokenStream input, FarmingGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected FarmingGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getModelAccess().getModelAction_0(),
            $current);
    }
)	otherlv_1='Model' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelAccess().getModelKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='ressourceTypes' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModelAccess().getRessourceTypesKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getRessourceTypesResourceTypeParserRuleCall_3_2_0()); 
	    }
		lv_ressourceTypes_5_0=ruleResourceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"ressourceTypes",
        		lv_ressourceTypes_5_0, 
        		"ResourceType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getModelAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getRessourceTypesResourceTypeParserRuleCall_3_3_1_0()); 
	    }
		lv_ressourceTypes_7_0=ruleResourceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"ressourceTypes",
        		lv_ressourceTypes_7_0, 
        		"ResourceType");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_3_4());
    }
)?(	otherlv_9='activities' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getModelAccess().getActivitiesKeyword_4_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getActivitiesPeriodicActivityParserRuleCall_4_2_0()); 
	    }
		lv_activities_11_0=rulePeriodicActivity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"activities",
        		lv_activities_11_0, 
        		"PeriodicActivity");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getModelAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getActivitiesPeriodicActivityParserRuleCall_4_3_1_0()); 
	    }
		lv_activities_13_0=rulePeriodicActivity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"activities",
        		lv_activities_13_0, 
        		"PeriodicActivity");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4_4());
    }
)?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleResourceType
entryRuleResourceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceTypeRule()); }
	 iv_ruleResourceType=ruleResourceType 
	 { $current=$iv_ruleResourceType.current; } 
	 EOF 
;

// Rule ResourceType
ruleResourceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getResourceTypeAccess().getResourceTypeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceTypeAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePeriodicActivity
entryRulePeriodicActivity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPeriodicActivityRule()); }
	 iv_rulePeriodicActivity=rulePeriodicActivity 
	 { $current=$iv_rulePeriodicActivity.current; } 
	 EOF 
;

// Rule PeriodicActivity
rulePeriodicActivity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPeriodicActivityAccess().getPeriodicActivityAction_0(),
            $current);
    }
)	otherlv_1='PeriodicActivity' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPeriodicActivityAccess().getPeriodicActivityKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicActivityAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicActivityRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPeriodicActivityAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='periodicity' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPeriodicActivityAccess().getPeriodicityKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicActivityAccess().getPeriodicityEIntParserRuleCall_4_1_0()); 
	    }
		lv_periodicity_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicActivityRule());
	        }
       		set(
       			$current, 
       			"periodicity",
        		lv_periodicity_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='start' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPeriodicActivityAccess().getStartKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicActivityAccess().getStartEDateParserRuleCall_5_1_0()); 
	    }
		lv_start_7_0=ruleEDate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicActivityRule());
	        }
       		set(
       			$current, 
       			"start",
        		lv_start_7_0, 
        		"EDate");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='end' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPeriodicActivityAccess().getEndKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicActivityAccess().getEndEDateParserRuleCall_6_1_0()); 
	    }
		lv_end_9_0=ruleEDate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicActivityRule());
	        }
       		set(
       			$current, 
       			"end",
        		lv_end_9_0, 
        		"EDate");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='rules' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPeriodicActivityAccess().getRulesKeyword_7_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPeriodicActivityAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicActivityAccess().getRulesRuleParserRuleCall_7_2_0()); 
	    }
		lv_rules_12_0=ruleRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicActivityRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_12_0, 
        		"Rule");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getPeriodicActivityAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicActivityAccess().getRulesRuleParserRuleCall_7_3_1_0()); 
	    }
		lv_rules_14_0=ruleRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicActivityRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_14_0, 
        		"Rule");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getPeriodicActivityAccess().getRightCurlyBracketKeyword_7_4());
    }
)?(	otherlv_16='allocations' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getPeriodicActivityAccess().getAllocationsKeyword_8_0());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getPeriodicActivityAccess().getLeftCurlyBracketKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicActivityAccess().getAllocationsResourceAllocationParserRuleCall_8_2_0()); 
	    }
		lv_allocations_18_0=ruleResourceAllocation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicActivityRule());
	        }
       		add(
       			$current, 
       			"allocations",
        		lv_allocations_18_0, 
        		"ResourceAllocation");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getPeriodicActivityAccess().getCommaKeyword_8_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicActivityAccess().getAllocationsResourceAllocationParserRuleCall_8_3_1_0()); 
	    }
		lv_allocations_20_0=ruleResourceAllocation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicActivityRule());
	        }
       		add(
       			$current, 
       			"allocations",
        		lv_allocations_20_0, 
        		"ResourceAllocation");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getPeriodicActivityAccess().getRightCurlyBracketKeyword_8_4());
    }
)?	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getPeriodicActivityAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEDate
entryRuleEDate returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEDateRule()); } 
	 iv_ruleEDate=ruleEDate 
	 { $current=$iv_ruleEDate.current.getText(); }  
	 EOF 
;

// Rule EDate
ruleEDate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='EDate' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDateAccess().getEDateKeyword()); 
    }

    ;





// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	 iv_ruleRule=ruleRule 
	 { $current=$iv_ruleRule.current; } 
	 EOF 
;

// Rule Rule
ruleRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRuleAccess().getRuleAction_0(),
            $current);
    }
)	otherlv_1='Rule' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRuleAccess().getRuleKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='predicates' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRuleAccess().getPredicatesKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getPredicatesPredicateParserRuleCall_3_2_0()); 
	    }
		lv_predicates_5_0=rulePredicate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		add(
       			$current, 
       			"predicates",
        		lv_predicates_5_0, 
        		"Predicate");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRuleAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getPredicatesPredicateParserRuleCall_3_3_1_0()); 
	    }
		lv_predicates_7_0=rulePredicate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		add(
       			$current, 
       			"predicates",
        		lv_predicates_7_0, 
        		"Predicate");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_3_4());
    }
)?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleResourceAllocation
entryRuleResourceAllocation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceAllocationRule()); }
	 iv_ruleResourceAllocation=ruleResourceAllocation 
	 { $current=$iv_ruleResourceAllocation.current; } 
	 EOF 
;

// Rule ResourceAllocation
ruleResourceAllocation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ResourceAllocation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getResourceAllocationAccess().getResourceAllocationKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getResourceAllocationAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='duration' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResourceAllocationAccess().getDurationKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceAllocationAccess().getDurationEIntParserRuleCall_2_1_0()); 
	    }
		lv_duration_3_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceAllocationRule());
	        }
       		set(
       			$current, 
       			"duration",
        		lv_duration_3_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='resource' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getResourceAllocationAccess().getResourceKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceAllocationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getResourceAllocationAccess().getResourceResourceTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getResourceAllocationAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	 iv_rulePredicate=rulePredicate 
	 { $current=$iv_rulePredicate.current; } 
	 EOF 
;

// Rule Predicate
rulePredicate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPredicateAccess().getPredicateAction_0(),
            $current);
    }
)	otherlv_1='Predicate' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPredicateAccess().getPredicateKeyword_1());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


