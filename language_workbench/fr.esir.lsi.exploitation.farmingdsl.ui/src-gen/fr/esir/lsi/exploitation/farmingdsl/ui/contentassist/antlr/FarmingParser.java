/*
* generated by Xtext
*/
package fr.esir.lsi.exploitation.farmingdsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.esir.lsi.exploitation.farmingdsl.services.FarmingGrammarAccess;

public class FarmingParser extends AbstractContentAssistParser {
	
	@Inject
	private FarmingGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.esir.lsi.exploitation.farmingdsl.ui.contentassist.antlr.internal.InternalFarmingParser createParser() {
		fr.esir.lsi.exploitation.farmingdsl.ui.contentassist.antlr.internal.InternalFarmingParser result = new fr.esir.lsi.exploitation.farmingdsl.ui.contentassist.antlr.internal.InternalFarmingParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getPeriodicActivityAccess().getAlternatives_4_2(), "rule__PeriodicActivity__Alternatives_4_2");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getRuleAccess().getAlternatives_1_1_0(), "rule__Rule__Alternatives_1_1_0");
					put(grammarAccess.getPredicateAccess().getAlternatives_1(), "rule__Predicate__Alternatives_1");
					put(grammarAccess.getPredicateAccess().getAlternatives_1_4_1(), "rule__Predicate__Alternatives_1_4_1");
					put(grammarAccess.getMonthAccess().getAlternatives(), "rule__Month__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getModelAccess().getGroup_3(), "rule__Model__Group_3__0");
					put(grammarAccess.getModelAccess().getGroup_3_3(), "rule__Model__Group_3_3__0");
					put(grammarAccess.getModelAccess().getGroup_4(), "rule__Model__Group_4__0");
					put(grammarAccess.getModelAccess().getGroup_4_3(), "rule__Model__Group_4_3__0");
					put(grammarAccess.getResourceTypeAccess().getGroup(), "rule__ResourceType__Group__0");
					put(grammarAccess.getPeriodicActivityAccess().getGroup(), "rule__PeriodicActivity__Group__0");
					put(grammarAccess.getPeriodicActivityAccess().getGroup_4(), "rule__PeriodicActivity__Group_4__0");
					put(grammarAccess.getPeriodicActivityAccess().getGroup_5(), "rule__PeriodicActivity__Group_5__0");
					put(grammarAccess.getPeriodicActivityAccess().getGroup_6(), "rule__PeriodicActivity__Group_6__0");
					put(grammarAccess.getPeriodicActivityAccess().getGroup_6_3(), "rule__PeriodicActivity__Group_6_3__0");
					put(grammarAccess.getPeriodicActivityAccess().getGroup_7(), "rule__PeriodicActivity__Group_7__0");
					put(grammarAccess.getPeriodicActivityAccess().getGroup_7_3(), "rule__PeriodicActivity__Group_7_3__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getDateAccess().getGroup(), "rule__Date__Group__0");
					put(grammarAccess.getRuleAccess().getGroup(), "rule__Rule__Group__0");
					put(grammarAccess.getRuleAccess().getGroup_1(), "rule__Rule__Group_1__0");
					put(grammarAccess.getRuleAccess().getGroup_1_1(), "rule__Rule__Group_1_1__0");
					put(grammarAccess.getResourceAllocationAccess().getGroup(), "rule__ResourceAllocation__Group__0");
					put(grammarAccess.getResourceAllocationAccess().getGroup_2(), "rule__ResourceAllocation__Group_2__0");
					put(grammarAccess.getPredicateAccess().getGroup(), "rule__Predicate__Group__0");
					put(grammarAccess.getPredicateAccess().getGroup_1_0(), "rule__Predicate__Group_1_0__0");
					put(grammarAccess.getPredicateAccess().getGroup_1_1(), "rule__Predicate__Group_1_1__0");
					put(grammarAccess.getPredicateAccess().getGroup_1_2(), "rule__Predicate__Group_1_2__0");
					put(grammarAccess.getPredicateAccess().getGroup_1_4(), "rule__Predicate__Group_1_4__0");
					put(grammarAccess.getModelAccess().getRessourceTypesAssignment_3_2(), "rule__Model__RessourceTypesAssignment_3_2");
					put(grammarAccess.getModelAccess().getRessourceTypesAssignment_3_3_1(), "rule__Model__RessourceTypesAssignment_3_3_1");
					put(grammarAccess.getModelAccess().getActivitiesAssignment_4_2(), "rule__Model__ActivitiesAssignment_4_2");
					put(grammarAccess.getModelAccess().getActivitiesAssignment_4_3_1(), "rule__Model__ActivitiesAssignment_4_3_1");
					put(grammarAccess.getResourceTypeAccess().getNameAssignment_1(), "rule__ResourceType__NameAssignment_1");
					put(grammarAccess.getPeriodicActivityAccess().getNameAssignment_2(), "rule__PeriodicActivity__NameAssignment_2");
					put(grammarAccess.getPeriodicActivityAccess().getPeriodicityAssignment_4_1(), "rule__PeriodicActivity__PeriodicityAssignment_4_1");
					put(grammarAccess.getPeriodicActivityAccess().getStartAssignment_5_1(), "rule__PeriodicActivity__StartAssignment_5_1");
					put(grammarAccess.getPeriodicActivityAccess().getEndAssignment_5_3(), "rule__PeriodicActivity__EndAssignment_5_3");
					put(grammarAccess.getPeriodicActivityAccess().getRulesAssignment_6_2(), "rule__PeriodicActivity__RulesAssignment_6_2");
					put(grammarAccess.getPeriodicActivityAccess().getRulesAssignment_6_3_1(), "rule__PeriodicActivity__RulesAssignment_6_3_1");
					put(grammarAccess.getPeriodicActivityAccess().getAllocationsAssignment_7_2(), "rule__PeriodicActivity__AllocationsAssignment_7_2");
					put(grammarAccess.getPeriodicActivityAccess().getAllocationsAssignment_7_3_1(), "rule__PeriodicActivity__AllocationsAssignment_7_3_1");
					put(grammarAccess.getDateAccess().getDayAssignment_1(), "rule__Date__DayAssignment_1");
					put(grammarAccess.getDateAccess().getMonthAssignment_2(), "rule__Date__MonthAssignment_2");
					put(grammarAccess.getDateAccess().getYearAssignment_3(), "rule__Date__YearAssignment_3");
					put(grammarAccess.getRuleAccess().getPredicatesAssignment_1_0(), "rule__Rule__PredicatesAssignment_1_0");
					put(grammarAccess.getRuleAccess().getPredicatesAssignment_1_1_1(), "rule__Rule__PredicatesAssignment_1_1_1");
					put(grammarAccess.getResourceAllocationAccess().getResourceAssignment_1(), "rule__ResourceAllocation__ResourceAssignment_1");
					put(grammarAccess.getResourceAllocationAccess().getDurationAssignment_2_1(), "rule__ResourceAllocation__DurationAssignment_2_1");
					put(grammarAccess.getPredicateAccess().getLinkedDateAssignment_1_2_1(), "rule__Predicate__LinkedDateAssignment_1_2_1");
					put(grammarAccess.getPredicateAccess().getLinkedActivityAssignment_1_4_3(), "rule__Predicate__LinkedActivityAssignment_1_4_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.esir.lsi.exploitation.farmingdsl.ui.contentassist.antlr.internal.InternalFarmingParser typedParser = (fr.esir.lsi.exploitation.farmingdsl.ui.contentassist.antlr.internal.InternalFarmingParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public FarmingGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(FarmingGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
